<?php

/*
 * Implements hook_menu();
 * */

function my_database_menu() {
    $items = array();

    $items['add'] = array(
        'title'             =>  'Add data',
        'page callback'     =>  'drupal_get_form',
        'page arguments'    =>  array('add_form'),
        'access callback'   =>  TRUE
    );

    $items['table'] = array(
        'title'             =>  'Data table',
        'page callback'     =>  'db_data_page',
        'access arguments'  =>  array('TRUE')
    );

    $items['update/%'] = array(
        'title callback'    =>  'db_update_title',
        'title arguments'   =>  array(1),
        'page callback'     =>  'drupal_get_form',
        'page arguments'    =>  array('db_update_form', 1),
        'access arguments'  =>  array('TRUE')
    );

    $items['delete/%'] = array(
        'title callback'    =>  'db_delete_title',
        'title arguments'   =>  array(1),
        'page callback'     =>  'drupal_get_form',
        'page arguments'    =>  array('db_delete_form', 1),
        'access arguments'  =>  array('TRUE')
    );

    return $items;
}

/*
 * Implements add_form();
 * */

function add_form($form, $form_state) {
    $form = array();

    $form['number'] = array(
        '#title'        =>  t('Number'),
        '#type'         =>  'textfield',
        '#maxlength'    =>  10,
        '#required'     =>  TRUE
    );

    $form['teaser'] = array(
        '#title'        =>  t('Teaser'),
        '#type'         =>  'textfield',
        '#maxlength'    =>  150,
        '#required'     =>  TRUE
    );

    $form['text'] = array(
        '#title'    =>  t('Text'),
        '#type'     =>  'textarea',
        '#required' =>  TRUE
    );

    $form['submit'] = array(
        '#type'     =>  'submit',
        '#value'    =>  t('Submit')
    );

    return $form;
}

/*
 * Implements form_validate();
 * */

function add_form_validate($form, &$form_state) {
    if(!ctype_digit($form_state['values']['number'])) {
        form_set_error('number', t('Field must be numeric'));
    }
}

/*
 * Implements form_submit();
 * */

function add_form_submit($form, &$form_state) {
    $query = db_insert('custom_table')
        ->fields(array(
            'number'    =>  $form_state['values']['number'],
            'teaser'    =>  $form_state['values']['teaser'],
            'text'      =>  $form_state['values']['text']
        ))
        ->execute();

    if($query > 0) {
        drupal_set_message(t("Data successfully added"));
    } else {
        drupal_set_message(t("Data unfortunately not added."), 'error');
    }
}

/*
 * Implements db_data_page(); Table implements
 * */

function db_data_page() {
    $head = array(t('Id'), t('Number'), t('Teaser'), t('Text'), t('Action'));
    $row = array();
    $query = db_select('custom_table', 't')
        ->fields('t', array('id', 'number', 'teaser', 'text'))
        ->execute();

    while ($value = $query->fetchAssoc()) {
        $row[] = array(
            $value['id'],
            $value['number'],
            $value['teaser'],
            $value['text'],
            l(t('Update'), "/update/{$value['id']}") . '<br/>' .
            l(t('Delete'), "/delete/{$value['id']}")
        );
    }

    return theme('table', array('header' => $head, 'rows' => $row));
}

/*
 * Implement update title
 * */

function db_update_title($id) {
    $my_id = array(':id' => $id);
    $number = db_query("SELECT `number` FROM {custom_table} WHERE `id` = :id", $my_id)->fetchField();

    if($number > 0) {
        return t('Edit element by @number number', array('@number' => $number));
    } else {
        return t('Not a found this element');
    }
}

/*
 * Implement update_form();
 * */

function db_update_form($form, $form_state) {
    $form = array();
    $id = $form_state['build_info']['args'][0];

    $data = db_select('custom_table', 't')
        ->condition('t.id', $id)
        ->fields('t')
        ->execute()
        ->fetchAssoc();

    $form['number'] = array(
        '#title'        =>  t('Number'),
        '#type'         =>  'textfield',
        '#maxlength'    =>  10,
        '#required'     =>  TRUE,
        '#default_value'=>  $data['number']
    );

    $form['teaser'] = array(
        '#title'        =>  t('Teaser'),
        '#type'         =>  'textfield',
        '#maxlength'    =>  150,
        '#required'     =>  TRUE,
        '#default_value'=>  $data['teaser']
    );

    $form['text'] = array(
        '#title'    =>  t('Text'),
        '#type'     =>  'textarea',
        '#required' =>  TRUE,
        '#default_value'=>  $data['text']
    );

    $form['actions'] = array(
        '#type' =>  'actions'
    );

    $form['actions']['submit'] = array(
        '#type'     =>  'submit',
        '#value'    =>  t('Submit')
    );

    $form['actions']['cancel'] = array(
        '#markup'   =>  l(t('Cancel'), 'table')
    );

    $form['#validate'][] = 'add_form_validate';

    return $form;
}

/*
 * Implements update form submit();
 * */

function db_update_form_submit($form, &$form_state) {
    $id = $form_state['build_info']['args'][0];
    $values = $form_state['values'];

    $query = db_update('custom_table')
        ->fields(array(
            'number'    => $values['number'],
            'teaser'    => $values['teaser'],
            'text'      => $values['text'],
        ))
        ->condition('id', $id)
        ->execute();

    if ($query) {
        drupal_set_message(t('Data successfully updated'));
    }
    else {
        drupal_set_message(t('Data is not updated'), 'warning');
    }

    $form_state['redirect'] = 'table';
}

/*
 * Implement delete title
 * */

function db_delete_title($id) {
    $my_id = array(':id' => $id);
    $number = db_query("SELECT `number` FROM {custom_table} WHERE `id` = :id", $my_id)->fetchField();

    return t('Are you sure you want to remove an item numbered @number?', array('@number' => $number));
}

/*
 * Implement delete_form();
 * */

function db_delete_form($form, $form_state) {
    $form = array();

    $form['submit'] = array(
        '#type'     =>  'submit',
        '#value'    =>  t('Submit')
    );

    $form['cancel'] = array(
        '#markup'   =>  l(t('Cancel'), 'table')
    );

    return $form;
}

/*
 * Implement delete_submit();
 * */

function db_delete_form_submit($form, &$form_state) {
    $id = $form_state['build_info']['args'][0];
    $result = db_delete('custom_table')
        ->condition('id', $id)
        ->execute();
    $placeholders = array('@id' => $id);
    if ($result) {
        drupal_set_message(t('Element @id successfully removed.', $placeholders));
    }
    else {
        drupal_set_message(t('Element @id is undefined.', $placeholders), 'warning');
    }
    $form_state['redirect'] = 'table';
}